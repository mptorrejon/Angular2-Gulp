"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var formly_event_emitter_1 = require("../services/formly.event.emitter");
var formly_messages_1 = require("../services/formly.messages");
var field_1 = require("./field");
var FormlyFieldTextArea = (function (_super) {
    __extends(FormlyFieldTextArea, _super);
    function FormlyFieldTextArea(fm, ps, elem) {
        _super.call(this, fm, ps);
        this.elem = elem;
    }
    FormlyFieldTextArea.prototype.ngAfterViewInit = function () {
        if (this.templateOptions.focus) {
            this.elem.nativeElement.querySelector("textarea").focus();
        }
    };
    FormlyFieldTextArea = __decorate([
        core_1.Component({
            selector: "formly-field-textarea",
            template: "\n    <fieldset class=\"form-group\" [ngFormModel]=\"form\" *ngIf=\"!templateOptions.hidden\">\n      <label attr.for=\"{{key}}\" class=\"form-control-label\">{{templateOptions.label}}</label>\n      <textarea name=\"{{key}}\" [ngControl]=\"key\" id=\"{{key}}\" [(ngModel)]=\"model\" cols=\"{{templateOptions.cols}}\"\n        rows=\"{{templateOptions.rows}}\" (change)=\"inputChange($event, 'value')\" (keyup)=\"inputChange($event, 'value')\"\n        placeholder=\"{{templateOptions.placeholder}}\" class=\"form-control\" [disabled]=\"templateOptions.disabled\"></textarea>\n      <small class=\"text-muted\">{{templateOptions.description}}</small>\n    </fieldset>",
            inputs: ["form", "update", "templateOptions", "key", "field", "formModel", "model"]
        }), 
        __metadata('design:paramtypes', [formly_messages_1.FormlyMessages, formly_event_emitter_1.FormlyPubSub, core_1.ElementRef])
    ], FormlyFieldTextArea);
    return FormlyFieldTextArea;
}(field_1.Field));
exports.FormlyFieldTextArea = FormlyFieldTextArea;
//# sourceMappingURL=formlyfield.textarea.js.map