"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var formly_event_emitter_1 = require("./../services/formly.event.emitter");
var common_1 = require("@angular/common");
var Field = (function () {
    function Field(fm, ps) {
        var _this = this;
        this.ps = ps;
        this.changeFn = new core_1.EventEmitter();
        this.messages = fm.getMessages();
        this.ps.Stream.subscribe(function (form) {
            _this.form = form;
        });
    }
    Object.defineProperty(Field.prototype, "modelUpdateReceiver", {
        set: function (modelUpdateReceiver) {
            var _this = this;
            this._modelUpdateReceiver = modelUpdateReceiver;
            this._modelUpdateReceiver.subscribe(function (model) {
                _this.model = model;
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Field.prototype, "model", {
        get: function () {
            return this._model;
        },
        set: function (value) {
            this._model = value;
        },
        enumerable: true,
        configurable: true
    });
    Field.prototype.ngOnInit = function () {
        var _this = this;
        if (this.update) {
            this.update.subscribe(function (update) {
                _this.templateOptions[update.key] = update.value;
            });
        }
    };
    Field.prototype.inputChange = function (e, val) {
        this._model = e.target[val];
        this.changeFn.emit(new formly_event_emitter_1.FormlyValueChangeEvent(this.key, e.target[val]));
        this.ps.setUpdated(true);
    };
    Object.defineProperty(Field.prototype, "formControl", {
        get: function () {
            if (!this._control) {
                this._control = this.createControl();
            }
            return this._control;
        },
        enumerable: true,
        configurable: true
    });
    Field.prototype.createControl = function () {
        return new common_1.Control(this._model || "", this.field.validation);
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], Field.prototype, "form", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], Field.prototype, "update", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], Field.prototype, "templateOptions", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String)
    ], Field.prototype, "key", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], Field.prototype, "field", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], Field.prototype, "formModel", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', core_1.EventEmitter)
    ], Field.prototype, "changeFn", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], Field.prototype, "model", null);
    return Field;
}());
exports.Field = Field;
//# sourceMappingURL=field.js.map