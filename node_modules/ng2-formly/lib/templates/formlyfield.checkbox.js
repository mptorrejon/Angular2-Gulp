"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var field_1 = require("./field");
var formly_messages_1 = require("./../services/formly.messages");
var formly_event_emitter_1 = require("./../services/formly.event.emitter");
var common_1 = require("@angular/common");
var FormlyFieldCheckbox = (function (_super) {
    __extends(FormlyFieldCheckbox, _super);
    function FormlyFieldCheckbox(fm, ps, formBuilder) {
        _super.call(this, fm, ps);
        this.formBuilder = formBuilder;
    }
    FormlyFieldCheckbox.prototype.createControl = function () {
        return this.formBuilder.control(this._model ? "on" : undefined);
    };
    FormlyFieldCheckbox = __decorate([
        core_1.Component({
            selector: "formly-field-checkbox",
            template: "\n    <div class=\"form-group\">\n      <div [ngFormModel]=\"form\">\n        <label class=\"c-input c-checkbox\">\n          <input type=\"checkbox\" [ngControl]=\"key\" (change)=\"inputChange($event, 'checked')\" [(ngModel)]=\"model\"\n            *ngIf=\"!templateOptions.hidden\" [disabled]=\"templateOptions.disabled\" value=\"on\"> {{templateOptions.label}}\n            <span class=\"c-indicator\"></span>\n          </label>\n      </div>\n      <small class=\"text-muted\">{{templateOptions.description}}</small>\n    </div>\n    ",
            inputs: ["form", "update", "templateOptions", "key", "field", "formModel", "model"]
        }), 
        __metadata('design:paramtypes', [formly_messages_1.FormlyMessages, formly_event_emitter_1.FormlyPubSub, common_1.FormBuilder])
    ], FormlyFieldCheckbox);
    return FormlyFieldCheckbox;
}(field_1.Field));
exports.FormlyFieldCheckbox = FormlyFieldCheckbox;
//# sourceMappingURL=formlyfield.checkbox.js.map