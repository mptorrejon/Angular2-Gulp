"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var formly_event_emitter_1 = require("../services/formly.event.emitter");
var formly_messages_1 = require("../services/formly.messages");
var field_1 = require("./field");
var common_1 = require("@angular/common");
var FormlyFieldRadio = (function (_super) {
    __extends(FormlyFieldRadio, _super);
    function FormlyFieldRadio(fm, ps, formBuilder) {
        _super.call(this, fm, ps);
        this.formBuilder = formBuilder;
    }
    FormlyFieldRadio.prototype.createControl = function () {
        var _this = this;
        var controlGroupConfig = this.templateOptions.options.reduce(function (previous, option) {
            previous[option.key] = [new common_1.RadioButtonState(_this._model === option.value, option.value)];
            return previous;
        }, {});
        return this.formBuilder.group(controlGroupConfig);
    };
    FormlyFieldRadio = __decorate([
        core_1.Component({
            selector: "formly-field-radio",
            template: "\n    <div [ngFormModel]=\"form\">\n      <div [ngControlGroup]=\"key\" class=\"form-group\">\n        <label class=\"form-control-label\" for=\"\">{{templateOptions.label}}</label>\n        <div *ngFor=\"let option of templateOptions.options\">\n          <label class=\"c-input c-radio\">\n            <input type=\"radio\" name=\"choose\" value=\"{{option.value}}\" [ngControl]=\"option.key\"\n              (change)=\"inputChange($event, 'value')\">{{option.value}}\n            <span class=\"c-indicator\"></span>\n          </label>\n        </div>\n        <small class=\"text-muted\">{{templateOptions.description}}</small>\n      </div>\n    </div>",
            inputs: ["form", "update", "templateOptions", "key", "field", "formModel", "model"]
        }), 
        __metadata('design:paramtypes', [formly_messages_1.FormlyMessages, formly_event_emitter_1.FormlyPubSub, common_1.FormBuilder])
    ], FormlyFieldRadio);
    return FormlyFieldRadio;
}(field_1.Field));
exports.FormlyFieldRadio = FormlyFieldRadio;
//# sourceMappingURL=formlyfield.radio.js.map