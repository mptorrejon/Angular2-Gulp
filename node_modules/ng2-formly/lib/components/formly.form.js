"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var formly_field_1 = require("./formly.field");
var formly_event_emitter_1 = require("./../services/formly.event.emitter");
var formly_field_group_1 = require("./formly.field.group");
var formly_config_1 = require("../services/formly.config");
var FormlyForm = (function (_super) {
    __extends(FormlyForm, _super);
    function FormlyForm(elem, _fm, ps, fb, formlyConfig) {
        _super.call(this, elem, ps, formlyConfig);
        this._fm = _fm;
        this.fb = fb;
        this.event = new formly_event_emitter_1.FormlyEventEmitter();
    }
    FormlyForm.prototype.ngOnInit = function () {
        if (!this._model) {
            this._model = {};
        }
        if (!this.formModel) {
            this.formModel = this.model;
        }
        if (!this.form) {
            this.form = this.fb.group({});
        }
    };
    FormlyForm.prototype.changeFunction = function (event, field) {
        this._model[event.key] = event.value;
        this.formSubmit.emit(event);
    };
    FormlyForm = __decorate([
        core_1.Component({
            selector: "formly-form",
            directives: [formly_field_1.FormlyField, formly_field_group_1.FormlyFieldGroup],
            template: "\n            <form class=\"formly\" role=\"form\" novalidate [ngFormModel]=\"form\">\n              <div class=\"formly-field\"\n                *ngFor=\"let f of fields\"\n                [ngClass]=\"f.className\">\n                <formly-field *ngIf=\"!f.fieldGroup\" [hide]=\"f.hideExpression\" [model]=\"model[f.key]\"\n                  [key]=\"f.key\" [form]=\"form\" [field]=\"f\" [formModel]= \"model\"\n                  (changeFn)=\"changeFunction($event, field)\" [eventEmitter]=\"event\">\n                </formly-field>\n                <formly-field-group *ngIf=\"f.fieldGroup\" [hide]=\"f.hideExpression\" [fields]=\"f.fieldGroup\"\n                  [model]=\"f.key ? model[f.key]: model\" [key]=\"f.key\" [form]=\"form\" [field]=\"f\"\n                  [formModel]= \"model\" (changeFn)=\"changeFunction($event, f)\" [eventEmitter]=\"event\">\n                </formly-field-group>\n              </div>\n              <ng-content></ng-content>\n            </form>\n            ",
            providers: [common_1.NgFormModel, formly_event_emitter_1.FormlyPubSub],
            inputs: ["field", "formModel", "form", "hide", "model", "key", "fields"]
        }), 
        __metadata('design:paramtypes', [core_1.ElementRef, common_1.NgFormModel, formly_event_emitter_1.FormlyPubSub, common_1.FormBuilder, formly_config_1.FormlyConfig])
    ], FormlyForm);
    return FormlyForm;
}(formly_field_group_1.FormlyFieldGroup));
exports.FormlyForm = FormlyForm;
//# sourceMappingURL=formly.form.js.map