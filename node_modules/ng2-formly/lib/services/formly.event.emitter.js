"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = require("rxjs/Subject");
var FormlyValueChangeEvent = (function () {
    function FormlyValueChangeEvent(key, value) {
        this.key = key;
        this.value = value;
    }
    return FormlyValueChangeEvent;
}());
exports.FormlyValueChangeEvent = FormlyValueChangeEvent;
var FormlyEventEmitter = (function (_super) {
    __extends(FormlyEventEmitter, _super);
    function FormlyEventEmitter() {
        _super.call(this);
    }
    FormlyEventEmitter.prototype.emit = function (value) {
        _super.prototype.next.call(this, value);
    };
    return FormlyEventEmitter;
}(Subject_1.Subject));
exports.FormlyEventEmitter = FormlyEventEmitter;
var FormlyPubSub = (function () {
    function FormlyPubSub() {
        this.emitters = {};
        this.updated = false;
        this.Stream = new FormlyEventEmitter();
    }
    FormlyPubSub.prototype.getUpdated = function () {
        return this.updated;
    };
    FormlyPubSub.prototype.setUpdated = function (value) {
        this.updated = value;
    };
    FormlyPubSub.prototype.setEmitter = function (key, emitter) {
        this.emitters[key] = emitter;
    };
    FormlyPubSub.prototype.getEmitter = function (key) {
        return this.emitters[key];
    };
    return FormlyPubSub;
}());
exports.FormlyPubSub = FormlyPubSub;
//# sourceMappingURL=formly.event.emitter.js.map