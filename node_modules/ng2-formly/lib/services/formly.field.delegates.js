"use strict";
var formly_expression_1 = require("./formly.expression");
var FormlyFieldVisibilityDelegate = (function () {
    function FormlyFieldVisibilityDelegate(formlyCommon) {
        this.formlyCommon = formlyCommon;
    }
    FormlyFieldVisibilityDelegate.prototype.eval = function (expression) {
        if (expression instanceof Function) {
            return expression();
        }
        else if (typeof expression === "string") {
            return formly_expression_1.evalExpression(expression, this.formlyCommon, ["model", "fieldModel"], [this.formlyCommon.formModel, this.formlyCommon.model]);
        }
        else {
            return expression ? true : false;
        }
    };
    FormlyFieldVisibilityDelegate.prototype.hasHideExpression = function () {
        return (this.formlyCommon.field && this.formlyCommon.field.hideExpression !== undefined) && this.formlyCommon.field.hideExpression ? true : false;
    };
    FormlyFieldVisibilityDelegate.prototype.checkVisibilityChange = function () {
        if (this.hasHideExpression()) {
            var hideExpressionResult = this.eval(this.formlyCommon.field.hideExpression);
            if (hideExpressionResult !== this.formlyCommon.isHidden()) {
                this.formlyCommon.setHidden(hideExpressionResult);
            }
        }
    };
    return FormlyFieldVisibilityDelegate;
}());
exports.FormlyFieldVisibilityDelegate = FormlyFieldVisibilityDelegate;
var FormlyFieldExpressionDelegate = (function () {
    function FormlyFieldExpressionDelegate(formlyCommon) {
        this.formlyCommon = formlyCommon;
    }
    FormlyFieldExpressionDelegate.prototype.hasExpression = function () {
        return (this.formlyCommon.field && this.formlyCommon.field.expressionProperties !== undefined);
    };
    FormlyFieldExpressionDelegate.prototype.checkExpressionChange = function () {
        if (this.hasExpression()) {
            var expressionProperties = this.formlyCommon.field.expressionProperties;
            if (expressionProperties) {
                for (var key in expressionProperties) {
                    var expressionValue = formly_expression_1.evalExpression(expressionProperties[key], this.formlyCommon, ["model", "fieldValue"], [this.formlyCommon.formModel, this.formlyCommon.model]);
                    formly_expression_1.expressionValueSetter(key, expressionValue, this.formlyCommon, ["model", "fieldModel", "templateOptions"], [this.formlyCommon.formModel, this.formlyCommon.model, this.formlyCommon.field.templateOptions]);
                }
            }
        }
    };
    return FormlyFieldExpressionDelegate;
}());
exports.FormlyFieldExpressionDelegate = FormlyFieldExpressionDelegate;
//# sourceMappingURL=formly.field.delegates.js.map